---
// OpenHeart.astro
interface Props {
  permalink: string;
  emoji?: string;
}

const { permalink, emoji = "❤️" } = Astro.props;
---


<open-heart href=`https://worker-test.josieblog.workers.dev/${permalink}` emoji={emoji}>{emoji}</open-heart>



<script>
  // Load the web component
  import "https://unpkg.com/open-heart-element";

  // Initialize components when they're defined
  window.customElements.whenDefined('open-heart').then(() => {
    document.querySelectorAll('open-heart').forEach(heart => {
      if ('getCount' in heart) {
        (heart as any).getCount();
      }
    });
  });

  // Refresh component after click
  window.addEventListener('open-heart', (e) => {
    const target = e.target as any;
    if (target?.getCount) {
      target.getCount();
    }
  });
</script>

<style>
    open-heart {
    margin: var(--card-padding);
    margin-top: 0;
    display: block;  // Center alignment
    margin-left: auto;
    margin-right: auto;
    width: fit-content;
    border: 1px solid #FFA7B6;
    border-radius: .4em;
    padding: .4em;

    }
    open-heart:not([disabled]):hover,
    open-heart:not([disabled]):focus {
    border-color: var(--accent-color);
    cursor: pointer;
    }
    open-heart[disabled] {
    background: #FFA7B6;
    border: 1px solid #FFA7B6;
    cursor: not-allowed;
    color: #fff;
    }
    open-heart[count]:not([count="0"])::after {
    content: attr(count);
    padding: .2em;
    }

</style>