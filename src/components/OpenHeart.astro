---
// Props to allow customization
export interface Props {
  permalink: string;
  emoji?: string;
}

// Default emoji if not provided
const heartEmoji = emoji ?? "❤️";
const href = `https://worker-test.josieblog.workers.dev/${permalink}`;
---
<open-heart href={href} emoji={heartEmoji}>{heartEmoji}</open-heart>

<!-- Load web component -->
<script src="https://unpkg.com/open-heart-element" type="module"></script>

<!-- Initialize the component and refresh on click -->
<script>
window.customElements.whenDefined('open-heart').then(() => {
  document.querySelectorAll('open-heart').forEach(oh => oh.getCount());
});

window.addEventListener('open-heart', (e) => {
  if (e?.target?.getCount) e.target.getCount();
});
</script>

<style>
 // Open heart reaction style
    open-heart {
    margin: var(--card-padding);
    margin-top: 0;
    display: block;  // Center alignment
    margin-left: auto;
    margin-right: auto;
    width: fit-content;
    border: 1px solid #FFA7B6;
    border-radius: .4em;
    padding: .4em;

    }
    open-heart:not([disabled]):hover,
    open-heart:not([disabled]):focus {
    border-color: var(--accent-color);
    cursor: pointer;
    }
    open-heart[disabled] {
    background: #FFA7B6;
    border: 1px solid #FFA7B6;
    cursor: not-allowed;
    color: #fff;
    }
    open-heart[count]:not([count="0"])::after {
    content: attr(count);
    padding: .2em;
    }

</style>