---
// OpenHeart.astro
interface Props {
  permalink: string;
  emoji?: string;
}

const { permalink, emoji = "❤️" } = Astro.props;
const workerUrl = `https://worker-test.josieblog.workers.dev/${permalink}`;
---

<!-- emoji component -->
<open-heart href={workerUrl} emoji={emoji}>{emoji}</open-heart>

<!-- load web component -->
<script src="https://unpkg.com/open-heart-element" type="module"></script>

<!-- when the webcomponent loads, fetch the current counts for that page -->
<script>
window.customElements.whenDefined('open-heart').then(() => {
  for (const oh of document.querySelectorAll('open-heart')) {
    oh.getCount()
  }
})

// refresh component after click
window.addEventListener('open-heart', e => {
  e && e.target && e.target.getCount && e.target.getCount()
})
</script>

<style>
  open-heart {
    margin: var(--card-padding);
    margin-top: 0;
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: fit-content;
    border: 1px solid #FFA7B6;
    border-radius: 0.4em;
    padding: 0.4em;
  }

  open-heart:not([disabled]):hover,
  open-heart:not([disabled]):focus {
    border-color: var(--accent-color);
    cursor: pointer;
  }

  open-heart[disabled] {
    background: #FFA7B6;
    border: 1px solid #FFA7B6;
    cursor: not-allowed;
    color: #fff;
  }

  open-heart[count]:not([count="0"])::after {
    content: " " attr(count);
    padding-left: 0.2em;
  }
</style>