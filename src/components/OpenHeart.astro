---
// OpenHeart.astro
interface Props {
  permalink: string;
  emoji?: string;
}

const { permalink, emoji = "❤️" } = Astro.props;
const workerUrl = `https://worker-test.josieblog.workers.dev/${permalink}`;
---

<div class="heart-container">
  <open-heart href={workerUrl} emoji={emoji}>{emoji}</open-heart>
</div>

<script>
  // Load the web component
  import "https://unpkg.com/open-heart-element";

  // Initialize components when they're defined
  window.customElements.whenDefined('open-heart').then(() => {
    document.querySelectorAll('open-heart').forEach(heart => {
      if ('getCount' in heart) {
        (heart as any).getCount();
      }
    });
  });

  // Refresh component after click
  window.addEventListener('open-heart', (e) => {
    const target = e.target as any;
    if (target?.getCount) {
      target.getCount();
    }
  });
</script>

<style>
  .heart-container {
    margin: var(--card-padding);
    margin-top: 0;
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: fit-content;
  }

  open-heart {
    border: 1px solid #FFA7B6;
    border-radius: 0.4em;
    padding: 0.4em;
  }

  open-heart:not([disabled]):hover,
  open-heart:not([disabled]):focus {
    border-color: var(--accent-color);
    cursor: pointer;
  }

  open-heart[disabled] {
    background: #FFA7B6;
    border: 1px solid #FFA7B6;
    cursor: not-allowed;
    color: #fff;
  }

  /* Display count using the count attribute */
  open-heart[count]:not([count="0"])::after {
    content: " " attr(count);
    font-size: 0.9em;
    color: #666;
    padding-left: 0.2em;
  }
</style>